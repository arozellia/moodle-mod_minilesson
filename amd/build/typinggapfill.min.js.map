{"version":3,"file":"typinggapfill.min.js","sources":["../src/typinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n], function($, log, ajax, def, anim, progresstimer) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson typing gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.getItems();\n            self.appReady();\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            // Next page button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n\n            // Start button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            // Skip.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_skip_btn\").on(\"click\", function() {\n                $(this).prop(\"disabled\", true);\n                $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_check_btn\").prop(\"disabled\", true);\n                // Move on after short time, to next prompt, or next question.\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        $(\".dictate_reply_\" + self.game.pointer).hide();\n                        self.items[self.game.pointer].answered = true;\n                        self.items[self.game.pointer].correct = false;\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n            // Check.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_check_btn\").on(\"click\", function() {\n                self.check_answer();\n            });\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push = ({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    definition: target.definition,\n                    typed: \"\",\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_loaded\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_start_btn\").prop(\"disabled\", false);\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            if (comparison) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            }\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    $(\".dictate_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n\n            $(\".dictate_ctrl-btn\").prop(\"disabled\", true);\n\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\", false);\n                self.next_question();\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_ctrl-btn\").prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_controls\").show();\n\n            self.nextPrompt();\n\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            $(\".dictate_ctrl-btn\").prop(\"disabled\", false);\n\n            var color;\n\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_title\").html(progress);\n\n            self.nextReply();\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='dictate_reply dictate_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            code += \"<div class='definition-container'>\";\n            code += \"<div class='definition'>\" + self.items[self.game.pointer].definition + \"</div>\";\n            code += \"</div>\";\n\n            code += \"</div>\";\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n            var newreply = $(\".dictate_reply_\" + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_ctrl-btn\").prop(\"disabled\", false);\n\n            var inputElements = [...document.querySelectorAll(\".dictate_reply_\" + self.game.pointer + \" input.single-character\")];\n            self.formReady(inputElements);\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    warningThreshold: 10,\n                    baseStyle: 'bg-danger progress-bar progress-bar-animated',\n                    warningStyle: 'bg-danger progress-bar progress-bar-animated',\n                    completeStyle: 'bg-danger progress-bar progress-bar-animated',\n                    onFinish: function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_check_btn\").trigger('click');\n                    }\n                });\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                     inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","anim","progresstimer","debug","clone","extend","this","init","index","itemdata","quizhelper","animopts","useanimatecss","register_events","getItems","appReady","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","do_next","self","uniqueid","on","start","prop","game","pointer","setTimeout","hide","answered","nextPrompt","end","check_answer","passage","parsedstring","characterunputs","transcript","each","data","value","val","push","getComparison","comparison","gotComparison","text_items","sentences","map","target","sentence","prompt","definition","typed","audio","show","addClass","callback","correctanswer","forEach","char","type","character","item","spoken","color","progress","idx","join","html","nextReply","code","append","newreply","do_animate","then","inputElements","document","querySelectorAll","formReady","timelimit","progressTimer","height","timeLimit","warningThreshold","baseStyle","warningStyle","completeStyle","onFinish","trigger","ele","addEventListener","keyCode","max","focus","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"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"}