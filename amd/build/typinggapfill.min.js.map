{"version":3,"file":"typinggapfill.min.js","sources":["../src/typinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n], function($, log, ajax, def, anim, progresstimer) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson typing gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.getItems();\n            self.appReady();\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            // Next page button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n\n            // Start button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            // Skip.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_skip_btn\").on(\"click\", function() {\n                $(this).prop(\"disabled\", true);\n                $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_check_btn\").prop(\"disabled\", true);\n                self.stopTimer(self.items[self.game.pointer].timer);\n                // Move on after short time, to next prompt, or next question.\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        $(\".dictate_reply_\" + self.game.pointer).hide();\n                        self.items[self.game.pointer].answered = true;\n                        self.items[self.game.pointer].correct = false;\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n            // Check.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_check_btn\").on(\"click\", function() {\n                self.check_answer();\n            });\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push = ({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    definition: target.definition,\n                    timer: [],\n                    typed: \"\",\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_loaded\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_start_btn\").prop(\"disabled\", false);\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            if (comparison) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    $(\".dictate_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n\n            $(\".dictate_ctrl-btn\").prop(\"disabled\", true);\n\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\", false);\n                self.next_question();\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_ctrl-btn\").prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_controls\").show();\n\n            self.nextPrompt();\n\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            $(\".dictate_ctrl-btn\").prop(\"disabled\", false);\n\n            var color;\n\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_title\").html(progress);\n\n            self.nextReply();\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='dictate_reply dictate_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            code += \"<div class='definition-container'>\";\n            code += \"<div class='definition'>\" + self.items[self.game.pointer].definition + \"</div>\";\n            code += \"</div>\";\n\n            code += \"</div>\";\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n\n            var newreply = $(\".dictate_reply_\" + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_ctrl-btn\").prop(\"disabled\", false);\n\n            var inputElements = [...document.querySelectorAll(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + ' input.single-character')];\n            self.formReady(inputElements);\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_reply_\" + self.game.pointer + ' input.single-character:first').focus();\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .dictate_check_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                     inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","anim","progresstimer","debug","clone","extend","this","init","index","itemdata","quizhelper","animopts","useanimatecss","register_events","getItems","appReady","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","do_next","self","uniqueid","on","start","prop","stopTimer","game","pointer","timer","setTimeout","hide","answered","nextPrompt","end","check_answer","passage","parsedstring","characterunputs","transcript","each","data","value","val","push","getComparison","comparison","gotComparison","text_items","sentences","map","target","sentence","prompt","definition","typed","audio","show","addClass","callback","correctanswer","forEach","char","type","character","item","spoken","color","progress","idx","join","html","nextReply","code","append","newreply","do_animate","then","inputElements","document","querySelectorAll","formReady","focus","timelimit","progressTimer","height","timeLimit","onFinish","trigger","attr","timers","clearInterval","ele","addEventListener","keyCode","max","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"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"}