{"version":3,"file":"listeninggapfill.min.js","sources":["../src/listeninggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'mod_minilesson/definitions',\n    'mod_minilesson/pollyhelper',\n    'mod_minilesson/animatecss',\n    'mod_minilesson/progresstimer',\n], function($, log, ajax, def, polly, anim, progresstimer) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson listening gap fill: initialising');\n\n    return {\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        usevoice: 'Amy',\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n            self.appReady();\n        },\n\n        next_question: function() {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER events\n            var audioplayerbtn=$(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_listen_btn\");\n            //audio button click event\n            audioplayerbtn.on(\"click\", function() {\n                var theaudio =self.items[self.game.pointer].audio;\n\n                //change icon to indicate playing state\n                theaudio.addEventListener('ended', function(){\n                    $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                    $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                });\n\n                theaudio.addEventListener('play', function(){\n                    $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                    $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                });\n\n                theaudio.load();\n                theaudio.play();\n            });\n\n            //toggle audio playback on spacekey press in input boxes\n            $(\"#\" + self.itemdata.uniqueid + \"_container\").on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 32) {\n                    e.preventDefault();\n                    audioplayerbtn.trigger(\"click\");\n                }\n            });\n\n\n\n\n            // On skip button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_skip_btn\").on(\"click\", function() {\n                // Disable buttons\n                $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_ctrl-btn\").prop(\"disabled\", true);\n                // Reveal prompt\n                $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_speech.lgapfill_teacher_left\").text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal answers\n                $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_targetWord\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var lgapfill_targetWord = self.items[self.game.pointer].lgapfill_targetWords[realidx];\n                    $(this).val(lgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                // Move on after short time, to next prompt, or next question\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        $(\".lgapfill_reply_\" + self.game.pointer).hide();\n                        self.items[self.game.pointer].answered = true;\n                        self.items[self.game.pointer].correct = false;\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_check_btn\").on(\"click\", function() {\n                self.check_answer();\n            });\n\n            // Listen for enter key on input boxeslap\n            $(\"#\" + self.itemdata.uniqueid + \"_container\").on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 13) {\n                    self.check_answer();\n                }\n            });\n\n            // Auto nav between inputs\n            $(\"#\" + self.itemdata.uniqueid + \"_container\").on(\"keyup\", \".lgapfill_targetWord\", function(e) {\n\n                // Move focus between textboxes\n                // log.debug(e);\n                var target = e.srcElement || e.target;\n                var maxLength = parseInt(target.attributes.maxlength.value, 10);\n                var myLength = target.value.length;\n                var key = e.which;\n                if (myLength >= maxLength) {\n                    var nextIdx = $(this).data('idx') + 1;\n                    var next = $(\"#\" + self.itemdata.uniqueid + \"_container input.lgapfill_targetWord[data-idx=\\\"\" + nextIdx + \"\\\"\");\n                    if (next.length === 1) {\n                        next.focus();\n                    }\n\n                    // Move to previous field if empty (user pressed backspace or delete)\n                } else if ((key == 8 || key == 46) && myLength === 0) {\n                    var previousIdx = $(this).data('idx') - 1;\n                    var previous = $(\"#\" + self.itemdata.uniqueid + \"_container input.lgapfill_targetWord[data-idx=\\\"\" + previousIdx + \"\\\"\");\n                    if (previous.length === 1) {\n                        previous.focus();\n                    }\n                }\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_reply_\" + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push = ({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n            return;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            $.each(self.items, function(index, item) {\n                polly.fetch_polly_url(item.prompt, self.voiceoption, self.usevoice).then(function(audiourl) {\n                    item.audio = new Audio();\n                    item.audio.src = audiourl;\n                    if (self.items.filter(function(e) {\n                        return e.audio == null;\n                    }).length == 0) {\n                        self.appReady();\n                    }\n                });\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_loaded\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_start_btn\").prop(\"disabled\", false);\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            if (comparison) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_reply_\" + self.game.pointer + \" .lgapfill_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n            } else if(!self.itemdata.allowretry) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_reply_\" + self.game.pointer + \" .lgapfill_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                //it was wrong but they can retry\n                var thereply = $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_reply_\" + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_ctrl-btn\").prop(\"disabled\", false);\n                    }\n                );\n                return;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    $(\".lgapfill_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getWords: function(thetext) {\n            var self = this;\n            var checkcase = false;\n            if (checkcase == 'false') {\n                thetext = thetext.toLowerCase();\n            }\n            var chunks = thetext.split(self.quizhelper.spliton_regexp).filter(function(e) {\n                return e !== \"\";\n            });\n            var words = [];\n            for (var i = 0; i < chunks.length; i++) {\n                if (!chunks[i].match(self.quizhelper.spliton_regexp)) {\n                    words.push(chunks[i]);\n                }\n            }\n            return words;\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n\n            $(\".lgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function() {\n                $(\".minilesson_nextbutton\").prop(\"disabled\", false);\n                self.next_question();\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_listen_cont\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_game\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_controls\").show();\n\n            self.nextPrompt();\n\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            $(\".lgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            var color;\n\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_title\").html(progress);\n\n            self.nextReply();\n\n            //play the audio\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_listen_btn\").trigger('click')\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='lgapfill_reply lgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' type='text' autocomplete='off' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' autocomplete='off' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='lgapfill_feedback'></i></div>\";\n\n            code += \"</div>\";\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n            var newreply = $(\".lgapfill_reply_\" + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            var inputElements = [...document.querySelectorAll(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_reply_\" + self.game.pointer + ' input.single-character')];\n            self.formReady(inputElements);\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_reply_\" + self.game.pointer + ' input.single-character:first').focus();\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function () {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .lgapfill_check_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                        inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","anim","progresstimer","debug","clone","extend","this","usevoice","init","index","itemdata","quizhelper","animopts","useanimatecss","register_events","setvoice","getItems","appReady","next_question","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","do_next","self","uniqueid","on","start","audioplayerbtn","theaudio","game","pointer","audio","addEventListener","children","removeClass","addClass","load","play","which","preventDefault","trigger","prop","text","prompt","each","realidx","data","lgapfill_targetWord","lgapfill_targetWords","val","stopTimer","timer","setTimeout","hide","answered","nextPrompt","end","check_answer","target","srcElement","maxLength","parseInt","attributes","maxlength","value","myLength","key","nextIdx","next","focus","previousIdx","previous","passage","parsedstring","characterunputs","transcript","push","getComparison","comparison","gotComparison","voiceoption","text_items","sentences","map","sentence","typed","item","fetch_polly_url","then","audiourl","Audio","src","show","allowretry","thereply","do_animate","getWords","thetext","chunks","split","spliton_regexp","words","i","match","callback","correctanswer","forEach","char","type","character","spoken","color","progress","idx","join","html","nextReply","code","append","newreply","inputElements","document","querySelectorAll","formReady","timelimit","progressTimer","height","timeLimit","onFinish","attr","timers","clearInterval","ele","keyCode","max","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"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"}